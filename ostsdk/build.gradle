import org.apache.tools.ant.taskdefs.condition.Os

/*
 * Copyright 2019 OST.com Inc
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 */

apply plugin: 'com.android.library'
apply from: 'maven-push.gradle'

/**
 * Run Proguard to shrink the Java bytecode in release builds.
 */
def enableProguardInReleaseBuilds = true

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 22
        targetSdkVersion 28
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }

        testOptions {
            unitTests.includeAndroidResources = true
            unitTests.returnDefaultValues = true
        }
    }

    sourceSets {
        androidTest.assets.srcDirs +=
                files("$projectDir/schemas".toString())
    }

    buildTypes {
        release {
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }

    task ndkBuild(type: Exec) {
        def rootDir = project.rootDir
        def localProperties = new File(rootDir, "local.properties")
        Properties properties = new Properties()
        localProperties.withInputStream { instr ->
            properties.load(instr)
        }
        def ndkDir = properties.getProperty('ndk.dir')

        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            commandLine ndkDir + '\\ndk-build.cmd',
                    'NDK_LIBS_OUT=main/jniLibs',
                    'NDK_PROJECT_PATH=' + rootDir + '\\ostsdk\\src',
                    'APP_BUILD_SCRIPT=jni/Android.mk',
                    '-C',
                    file('src').absolutePath
        } else {
            commandLine ndkDir + '/ndk-build',
                    'NDK_LIBS_OUT=main/jniLibs',
                    'NDK_PROJECT_PATH=' + rootDir + '/ostsdk/src',
                    'APP_BUILD_SCRIPT=jni/Android.mk',
                    '-C',
                    file('src').absolutePath
        }
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkBuild
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'org.mockito:mockito-core:2.23.0'
    testImplementation 'junit:junit:4.12'

    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:design:28.0.0'
    // Room components
    implementation "android.arch.persistence.room:runtime:$rootProject.roomVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$rootProject.roomVersion"
    androidTestImplementation "android.arch.persistence.room:testing:$rootProject.roomVersion"

    api 'com.madgag.spongycastle:core:1.56.0.0'
    api group: 'org.web3j', name: 'core', version: '4.1.0-android'
    // Lifecycle components
    implementation "android.arch.lifecycle:extensions:$rootProject.roomVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$rootProject.roomVersion"

    // https://mvnrepository.com/artifact/com.google.guava/guava
    api 'com.google.guava:guava:18.0'

    // Zxing barcode dependency
    api 'me.dm7.barcodescanner:zxing:1.9.8'

    api 'com.datatheorem.android.trustkit:trustkit:1.1.2'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'android.arch.persistence.room:testing:1.1.1'

    androidTestImplementation 'com.android.support.test:runner:1.0.2'

    // https://mvnrepository.com/artifact/org.json/json
    testImplementation 'org.json:json:20160810'
}

task deleteJar(type: Delete) {
    delete 'libs/jars/ostsdk.jar'
}

task createJar(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('libs/jars/')
    include('classes.jar')
    rename('classes.jar', 'ostsdk.jar')
}

createJar.dependsOn(deleteJar, build)
